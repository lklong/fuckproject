<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhigu.mapper.PointMapper">
	<insert id="savePointExchangeGoods" parameterType="pointExchangeGoods">
		insert into pointExchangeGoods(name,picture,repertory,needPoint,status,adminId,addTime,money,pointType,details) values(#{name},#{picture},#{repertory},#{needPoint},#{status},#{adminId},now(),#{money},#{pointType},#{details});
	</insert>
	<select id="queryUserPointForUpdate" parameterType="int" resultType="userPoint">
		select * from UserPoint  where UserID=#{userID} for update;
	</select>
	
	<update id="updatePointExchangeGoodsStatus" parameterType="pointExchangeGoods">
		update pointExchangeGoods set status=#{status},version = version+1 where id=#{id};
	</update>
	<update id="updatePointExchangeGoodsRepertory" parameterType="pointExchangeGoods">
		update pointExchangeGoods set repertory=#{repertory},version=version+1 where id=#{id} and status=1 and version=#{version};
	</update>
	
	
	<update id="updatePointExchangeGoods" parameterType="pointExchangeGoods">
		update pointExchangeGoods set name=#{name},money=#{money},needPoint=#{needPoint},repertory=#{repertory},picture=#{picture},pointType=#{pointType},details=#{details},version=version+1 where id=#{id} and status=1 and version=#{version};
	</update>
	
	
	
	<select id="queryPointExchangeGoodsByIdForUpdate" parameterType="int" resultType="pointExchangeGoods">
		select * from pointExchangeGoods where id=#{id} for update;
	</select>
	<select id="queryPointExchangeGoodsById" parameterType="int" resultType="pointExchangeGoods">
		select * from pointExchangeGoods where id=#{id};
	</select>
	<select id="queryPointExchangeGoods" parameterType="page" resultType="pointExchangeGoods">
		select * from pointExchangeGoods order by addTime desc
	</select>
	<select id="queryCanBuyPointExchangeGoods" parameterType="page" resultType="pointExchangeGoods">
		select * from pointExchangeGoods where status = 1 
		<choose>
			<when test="orderBy==10">
				order by needPoint ASC
			</when>
			<when test="orderBy==11">
				order by needPoint DESC
			</when>
			<otherwise>
				order by needPoint DESC
			</otherwise>
		</choose>
	</select>
	
</mapper>

