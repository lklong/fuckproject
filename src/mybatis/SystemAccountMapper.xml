<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhigu.mapper.SystemAccountMapper" >
  <resultMap id="BaseResultMap" type="com.zhigu.model.SystemAccount" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sno" property="sno" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="income_flag" property="incomeFlag" jdbcType="BIT" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="matter" property="matter" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, sno, user_id, income_flag, money, create_time, matter
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from systemaccount
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from systemaccount
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zhigu.model.SystemAccount" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into systemaccount (id, sno, user_id, 
      income_flag, money, create_time, 
      matter)
    values (#{id,jdbcType=BIGINT}, #{sno,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{incomeFlag,jdbcType=BIT}, #{money,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{matter,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhigu.model.SystemAccount" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into systemaccount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sno != null" >
        sno,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="incomeFlag != null" >
        income_flag,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="matter != null" >
        matter,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sno != null" >
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="incomeFlag != null" >
        #{incomeFlag,jdbcType=BIT},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="matter != null" >
        #{matter,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhigu.model.SystemAccount" >
    update systemaccount
    <set >
      <if test="sno != null" >
        sno = #{sno,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="incomeFlag != null" >
        income_flag = #{incomeFlag,jdbcType=BIT},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="matter != null" >
        matter = #{matter,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhigu.model.SystemAccount" >
    update systemaccount
    set sno = #{sno,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      income_flag = #{incomeFlag,jdbcType=BIT},
      money = #{money,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      matter = #{matter,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>