<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhigu.mapper.OpenUserMapper">
	<resultMap id="BaseResultMap" type="com.zhigu.model.OpenUser">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="open_id" property="openId" jdbcType="VARCHAR" />
		<result column="open_user" property="openUser" jdbcType="VARCHAR" />
		<result column="open_type" property="openType" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, open_id, open_user, open_type, user_id, add_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from open_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from open_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.zhigu.model.OpenUser">
		<selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into open_user (id, open_id, open_user,
		open_type, user_id, add_time
		)
		values (#{id,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR}, #{openUser,jdbcType=VARCHAR},
		#{openType,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.zhigu.model.OpenUser">
		<selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into open_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			<if test="openId != null">
				open_id,
			</if>
			<if test="openUser != null">
				open_user,
			</if>
			<if test="openType != null">
				open_type,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id,jdbcType=INTEGER},
			<if test="openId != null">
				#{openId,jdbcType=VARCHAR},
			</if>
			<if test="openUser != null">
				#{openUser,jdbcType=VARCHAR},
			</if>
			<if test="openType != null">
				#{openType,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zhigu.model.OpenUser">
		update open_user
		<set>
			<if test="openId != null">
				open_id = #{openId,jdbcType=VARCHAR},
			</if>
			<if test="openUser != null">
				open_user = #{openUser,jdbcType=VARCHAR},
			</if>
			<if test="openType != null">
				open_type = #{openType,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zhigu.model.OpenUser">
		update open_user
		set open_id = #{openId,jdbcType=VARCHAR},
		open_user = #{openUser,jdbcType=VARCHAR},
		open_type = #{openType,jdbcType=INTEGER},
		user_id = #{userId,jdbcType=INTEGER},
		add_time = #{addTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<select id="selectByOpenId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from open_user
		where open_id = #{openId,jdbcType=VARCHAR} order by add_time DESC limit 1;
	</select>
</mapper>